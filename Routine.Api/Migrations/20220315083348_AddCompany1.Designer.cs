// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Routine.Api.Data;

namespace Routine.Api.Migrations
{
    [DbContext(typeof(RoutesDbContext))]
    [Migration("20220315083348_AddCompany1")]
    partial class AddCompany1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.23");

            modelBuilder.Entity("Routine.Api.Entities.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Introduction")
                        .HasColumnType("TEXT")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3781029a-13cd-a93c-cc09-c5fa4b18889e"),
                            Introduction = "Good Company",
                            Name = "微软"
                        },
                        new
                        {
                            Id = new Guid("7ead96f5-a8f5-99e3-c238-3e425a476e76"),
                            Introduction = "中国 Company",
                            Name = "阿里"
                        },
                        new
                        {
                            Id = new Guid("0aff89a7-98b7-d258-fc8a-435e23f8b1d1"),
                            Introduction = "游戏 Company",
                            Name = "腾讯"
                        },
                        new
                        {
                            Id = new Guid("d1f1f410-f563-4355-aa91-4774d693363f"),
                            Introduction = "test",
                            Name = "test"
                        });
                });

            modelBuilder.Entity("Routine.Api.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeNo")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ca268a19-0f39-4d8b-b8d6-5bace54f8027"),
                            CompanyId = new Guid("3781029a-13cd-a93c-cc09-c5fa4b18889e"),
                            DateOfBirth = new DateTime(1955, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeNo = "M001",
                            FirstName = "William",
                            Gender = 1,
                            LastName = "Gates"
                        },
                        new
                        {
                            Id = new Guid("265348d2-1276-4ada-ae33-4c1b8348edce"),
                            CompanyId = new Guid("3781029a-13cd-a93c-cc09-c5fa4b18889e"),
                            DateOfBirth = new DateTime(1998, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeNo = "M002",
                            FirstName = "Kent",
                            Gender = 1,
                            LastName = "Back"
                        },
                        new
                        {
                            Id = new Guid("47b70abc-98b8-4fdc-b9fa-5dd6716f6e6b"),
                            CompanyId = new Guid("7ead96f5-a8f5-99e3-c238-3e425a476e76"),
                            DateOfBirth = new DateTime(1986, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeNo = "G001",
                            FirstName = "Mary",
                            Gender = 2,
                            LastName = "King"
                        },
                        new
                        {
                            Id = new Guid("059e2fcb-e5a4-4188-9b46-06184bcb111b"),
                            CompanyId = new Guid("7ead96f5-a8f5-99e3-c238-3e425a476e76"),
                            DateOfBirth = new DateTime(1977, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeNo = "G002",
                            FirstName = "Kevin",
                            Gender = 1,
                            LastName = "Richardson"
                        },
                        new
                        {
                            Id = new Guid("910e7452-c05f-4bf1-b084-6367873664a1"),
                            CompanyId = new Guid("7ead96f5-a8f5-99e3-c238-3e425a476e76"),
                            DateOfBirth = new DateTime(1982, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeNo = "G003",
                            FirstName = "Frederic",
                            Gender = 1,
                            LastName = "Pullan"
                        },
                        new
                        {
                            Id = new Guid("a868ff18-3398-4598-b420-4878974a517a"),
                            CompanyId = new Guid("0aff89a7-98b7-d258-fc8a-435e23f8b1d1"),
                            DateOfBirth = new DateTime(1964, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeNo = "A001",
                            FirstName = "Jack",
                            Gender = 1,
                            LastName = "Ma"
                        },
                        new
                        {
                            Id = new Guid("2c3bb40c-5907-4eb7-bb2c-7d62edb430c9"),
                            CompanyId = new Guid("0aff89a7-98b7-d258-fc8a-435e23f8b1d1"),
                            DateOfBirth = new DateTime(1997, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeNo = "A002",
                            FirstName = "Lorraine",
                            Gender = 2,
                            LastName = "Shaw"
                        },
                        new
                        {
                            Id = new Guid("e32c33a7-df20-4b9a-a540-414192362d52"),
                            CompanyId = new Guid("0aff89a7-98b7-d258-fc8a-435e23f8b1d1"),
                            DateOfBirth = new DateTime(2000, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeNo = "A003",
                            FirstName = "Abel",
                            Gender = 2,
                            LastName = "Obadiah"
                        });
                });

            modelBuilder.Entity("Routine.Api.Entities.Employee", b =>
                {
                    b.HasOne("Routine.Api.Entities.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
